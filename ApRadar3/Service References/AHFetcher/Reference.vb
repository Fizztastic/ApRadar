'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.239
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace AHFetcher
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Servers", [Namespace]:="http://schemas.datacontract.org/2004/07/AHService")>  _
    Public Enum Servers As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Alexander = 10
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Asura = 28
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Bahamut = 1
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Bismarck = 25
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Caitsith = 15
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Carbuncle = 6
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Cerberus = 23
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Diabolos = 14
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Fairy = 30
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Fenrir = 7
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Garuda = 22
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Gilgamesh = 19
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Hades = 32
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Ifrit = 13
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Kujata = 24
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Lakshmi = 27
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Leviathan = 11
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Midgardsormr = 29
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Odin = 12
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Pandemonium = 21
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Phoenix = 5
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Quetzalcoatl = 16
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Ragnarok = 20
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Ramuh = 4
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Remora = 31
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Seraph = 26
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Shiva = 2
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Siren = 17
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Sylph = 8
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Titan = 3
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Unicorn = 18
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Valefor = 9
    End Enum
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SearchResult", [Namespace]:="http://schemas.datacontract.org/2004/07/AHService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SearchResult
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AverageCostField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemStatsField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PastSalesField() As AHFetcher.SaleRecord
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PerDayField As Single
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private QuantityField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StackPriceField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AverageCost() As Integer
            Get
                Return Me.AverageCostField
            End Get
            Set
                If (Me.AverageCostField.Equals(value) <> true) Then
                    Me.AverageCostField = value
                    Me.RaisePropertyChanged("AverageCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemName() As String
            Get
                Return Me.ItemNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemNameField, value) <> true) Then
                    Me.ItemNameField = value
                    Me.RaisePropertyChanged("ItemName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemStats() As String
            Get
                Return Me.ItemStatsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemStatsField, value) <> true) Then
                    Me.ItemStatsField = value
                    Me.RaisePropertyChanged("ItemStats")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PastSales() As AHFetcher.SaleRecord()
            Get
                Return Me.PastSalesField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PastSalesField, value) <> true) Then
                    Me.PastSalesField = value
                    Me.RaisePropertyChanged("PastSales")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PerDay() As Single
            Get
                Return Me.PerDayField
            End Get
            Set
                If (Me.PerDayField.Equals(value) <> true) Then
                    Me.PerDayField = value
                    Me.RaisePropertyChanged("PerDay")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Quantity() As Integer
            Get
                Return Me.QuantityField
            End Get
            Set
                If (Me.QuantityField.Equals(value) <> true) Then
                    Me.QuantityField = value
                    Me.RaisePropertyChanged("Quantity")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StackPrice() As Integer
            Get
                Return Me.StackPriceField
            End Get
            Set
                If (Me.StackPriceField.Equals(value) <> true) Then
                    Me.StackPriceField = value
                    Me.RaisePropertyChanged("StackPrice")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SaleRecord", [Namespace]:="http://schemas.datacontract.org/2004/07/AHService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SaleRecord
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FromField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PriceField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SaleDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ToField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property From() As String
            Get
                Return Me.FromField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FromField, value) <> true) Then
                    Me.FromField = value
                    Me.RaisePropertyChanged("From")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Price() As Integer
            Get
                Return Me.PriceField
            End Get
            Set
                If (Me.PriceField.Equals(value) <> true) Then
                    Me.PriceField = value
                    Me.RaisePropertyChanged("Price")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SaleDate() As Date
            Get
                Return Me.SaleDateField
            End Get
            Set
                If (Me.SaleDateField.Equals(value) <> true) Then
                    Me.SaleDateField = value
                    Me.RaisePropertyChanged("SaleDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property [To]() As String
            Get
                Return Me.ToField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ToField, value) <> true) Then
                    Me.ToField = value
                    Me.RaisePropertyChanged("To")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://ah.apneasoft.com/", ConfigurationName:="AHFetcher.IAHParser")>  _
    Public Interface IAHParser
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://ah.apneasoft.com/IAHParser/CheckItem", ReplyAction:="http://ah.apneasoft.com/IAHParser/CheckItemResponse")>  _
        Function CheckItem(ByVal server As AHFetcher.Servers, ByVal itemName As String) As AHFetcher.SearchResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://ah.apneasoft.com/IAHParser/CheckItemByID", ReplyAction:="http://ah.apneasoft.com/IAHParser/CheckItemByIDResponse")>  _
        Function CheckItemByID(ByVal server As AHFetcher.Servers, ByVal ID As Integer) As AHFetcher.SearchResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://ah.apneasoft.com/IAHParser/CheckStack", ReplyAction:="http://ah.apneasoft.com/IAHParser/CheckStackResponse")>  _
        Function CheckStack(ByVal server As AHFetcher.Servers, ByVal itemName As String) As AHFetcher.SearchResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://ah.apneasoft.com/IAHParser/CheckStackByID", ReplyAction:="http://ah.apneasoft.com/IAHParser/CheckStackByIDResponse")>  _
        Function CheckStackByID(ByVal server As AHFetcher.Servers, ByVal ID As Integer) As AHFetcher.SearchResult
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://ah.apneasoft.com/IAHParser/CheckItemHasStock", ReplyAction:="http://ah.apneasoft.com/IAHParser/CheckItemHasStockResponse")>  _
        Function CheckItemHasStock(ByVal server As AHFetcher.Servers, ByVal itemName As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://ah.apneasoft.com/IAHParser/CheckStackHasStock", ReplyAction:="http://ah.apneasoft.com/IAHParser/CheckStackHasStockResponse")>  _
        Function CheckStackHasStock(ByVal server As AHFetcher.Servers, ByVal itemName As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://ah.apneasoft.com/IAHParser/GetItemLastSale", ReplyAction:="http://ah.apneasoft.com/IAHParser/GetItemLastSaleResponse")>  _
        Function GetItemLastSale(ByVal server As AHFetcher.Servers, ByVal itemName As String) As AHFetcher.SaleRecord
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://ah.apneasoft.com/IAHParser/GetStackLastSale", ReplyAction:="http://ah.apneasoft.com/IAHParser/GetStackLastSaleResponse")>  _
        Function GetStackLastSale(ByVal server As AHFetcher.Servers, ByVal itemName As String) As AHFetcher.SaleRecord
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://ah.apneasoft.com/IAHParser/GetItemSales", ReplyAction:="http://ah.apneasoft.com/IAHParser/GetItemSalesResponse")>  _
        Function GetItemSales(ByVal server As AHFetcher.Servers, ByVal itemName As String) As AHFetcher.SaleRecord()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://ah.apneasoft.com/IAHParser/GetStackSales", ReplyAction:="http://ah.apneasoft.com/IAHParser/GetStackSalesResponse")>  _
        Function GetStackSales(ByVal server As AHFetcher.Servers, ByVal itemName As String) As AHFetcher.SaleRecord()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://ah.apneasoft.com/IAHParser/GetItemStock", ReplyAction:="http://ah.apneasoft.com/IAHParser/GetItemStockResponse")>  _
        Function GetItemStock(ByVal server As AHFetcher.Servers, ByVal itemName As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://ah.apneasoft.com/IAHParser/GetStackStock", ReplyAction:="http://ah.apneasoft.com/IAHParser/GetStackStockResponse")>  _
        Function GetStackStock(ByVal server As AHFetcher.Servers, ByVal itemName As String) As Integer
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IAHParserChannel
        Inherits AHFetcher.IAHParser, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class AHParserClient
        Inherits System.ServiceModel.ClientBase(Of AHFetcher.IAHParser)
        Implements AHFetcher.IAHParser
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function CheckItem(ByVal server As AHFetcher.Servers, ByVal itemName As String) As AHFetcher.SearchResult Implements AHFetcher.IAHParser.CheckItem
            Return MyBase.Channel.CheckItem(server, itemName)
        End Function
        
        Public Function CheckItemByID(ByVal server As AHFetcher.Servers, ByVal ID As Integer) As AHFetcher.SearchResult Implements AHFetcher.IAHParser.CheckItemByID
            Return MyBase.Channel.CheckItemByID(server, ID)
        End Function
        
        Public Function CheckStack(ByVal server As AHFetcher.Servers, ByVal itemName As String) As AHFetcher.SearchResult Implements AHFetcher.IAHParser.CheckStack
            Return MyBase.Channel.CheckStack(server, itemName)
        End Function
        
        Public Function CheckStackByID(ByVal server As AHFetcher.Servers, ByVal ID As Integer) As AHFetcher.SearchResult Implements AHFetcher.IAHParser.CheckStackByID
            Return MyBase.Channel.CheckStackByID(server, ID)
        End Function
        
        Public Function CheckItemHasStock(ByVal server As AHFetcher.Servers, ByVal itemName As String) As Boolean Implements AHFetcher.IAHParser.CheckItemHasStock
            Return MyBase.Channel.CheckItemHasStock(server, itemName)
        End Function
        
        Public Function CheckStackHasStock(ByVal server As AHFetcher.Servers, ByVal itemName As String) As Boolean Implements AHFetcher.IAHParser.CheckStackHasStock
            Return MyBase.Channel.CheckStackHasStock(server, itemName)
        End Function
        
        Public Function GetItemLastSale(ByVal server As AHFetcher.Servers, ByVal itemName As String) As AHFetcher.SaleRecord Implements AHFetcher.IAHParser.GetItemLastSale
            Return MyBase.Channel.GetItemLastSale(server, itemName)
        End Function
        
        Public Function GetStackLastSale(ByVal server As AHFetcher.Servers, ByVal itemName As String) As AHFetcher.SaleRecord Implements AHFetcher.IAHParser.GetStackLastSale
            Return MyBase.Channel.GetStackLastSale(server, itemName)
        End Function
        
        Public Function GetItemSales(ByVal server As AHFetcher.Servers, ByVal itemName As String) As AHFetcher.SaleRecord() Implements AHFetcher.IAHParser.GetItemSales
            Return MyBase.Channel.GetItemSales(server, itemName)
        End Function
        
        Public Function GetStackSales(ByVal server As AHFetcher.Servers, ByVal itemName As String) As AHFetcher.SaleRecord() Implements AHFetcher.IAHParser.GetStackSales
            Return MyBase.Channel.GetStackSales(server, itemName)
        End Function
        
        Public Function GetItemStock(ByVal server As AHFetcher.Servers, ByVal itemName As String) As Integer Implements AHFetcher.IAHParser.GetItemStock
            Return MyBase.Channel.GetItemStock(server, itemName)
        End Function
        
        Public Function GetStackStock(ByVal server As AHFetcher.Servers, ByVal itemName As String) As Integer Implements AHFetcher.IAHParser.GetStackStock
            Return MyBase.Channel.GetStackStock(server, itemName)
        End Function
    End Class
End Namespace
